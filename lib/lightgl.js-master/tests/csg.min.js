/*
 * csg.js
 * http://github.com/evanw/csg.js/
 *
 * Copyright 2011 Evan Wallace
 * Released under the MIT license
 */
CSG=function(){this.root=new CSG.Node};CSG.fromPolygons=function(a){var b=new CSG;b.root.build(a);return b};
CSG.prototype={clone:function(){var a=new CSG;a.root=this.root.clone();return a},toPolygons:function(){return this.root.allPolygons()},union:function(a){var b=this.clone();a=a.clone();b.root.clipTo(a.root);a.root.clipTo(b.root);a.root.invert();a.root.clipTo(b.root);a.root.invert();b.root.build(a.root.allPolygons());return b},subtract:function(a){var b=this.clone();a=a.clone();b.root.invert();b.root.clipTo(a.root);a.root.clipTo(b.root);a.root.invert();a.root.clipTo(b.root);a.root.invert();b.root.build(a.root.allPolygons());
b.root.invert();return b},intersect:function(a){var b=this.clone();a=a.clone();b.root.invert();a.root.clipTo(b.root);a.root.invert();b.root.clipTo(a.root);a.root.clipTo(b.root);b.root.build(a.root.allPolygons());b.root.invert();return b},inverse:function(){var a=this.clone();a.root.invert();return a}};
CSG.cube=function(a){a=a||{};var b=new CSG.Vector(a.center||[0,0,0]),c=a.radius||1;return CSG.fromPolygons([[[0,4,6,2],[-1,0,0]],[[1,3,7,5],[+1,0,0]],[[0,1,5,4],[0,-1,0]],[[2,6,7,3],[0,+1,0]],[[0,2,3,1],[0,0,-1]],[[4,5,7,6],[0,0,+1]]].map(function(f){return new CSG.Polygon(f[0].map(function(g){g=new CSG.Vector(b.x+c*(2*!!(g&1)-1),b.y+c*(2*!!(g&2)-1),b.z+c*(2*!!(g&4)-1));return new CSG.Vertex(g,new CSG.Vector(f[1]))}))}))};
CSG.sphere=function(a){function b(k,j){k*=Math.PI*2;j*=Math.PI;var l=new CSG.Vector(Math.cos(k)*Math.sin(j),Math.cos(j),Math.sin(k)*Math.sin(j));h.push(new CSG.Vertex(c.plus(l.times(f)),l))}a=a||{};var c=new CSG.Vector(a.center||[0,0,0]),f=a.radius||1,g=a.slices||16;a=a.stacks||8;for(var i=[],h,e=0;e<g;e++)for(var d=0;d<a;d++){h=[];b(e/g,d/a);d>0&&b((e+1)/g,d/a);d<a-1&&b((e+1)/g,(d+1)/a);b(e/g,(d+1)/a);i.push(new CSG.Polygon(h))}return CSG.fromPolygons(i)};
CSG.cylinder=function(a){function b(q,m,p){m=m*Math.PI*2;m=d.times(Math.cos(m)).plus(k.times(Math.sin(m)));q=c.plus(g.times(q)).plus(m.times(i));p=m.times(1-Math.abs(p)).plus(h.times(p));return new CSG.Vertex(q,p)}a=a||{};var c=new CSG.Vector(a.start||[0,-1,0]),f=new CSG.Vector(a.end||[0,1,0]),g=f.minus(c),i=a.radius||1;a=a.slices||16;var h=g.unit(),e=Math.abs(h.y)>0.5,d=(new CSG.Vector(e,!e,0)).cross(h).unit(),k=d.cross(h).unit();e=new CSG.Vertex(c,h.negated());f=new CSG.Vertex(f,h.unit());for(var j=
[],l=0;l<a;l++){var n=l/a,o=(l+1)/a;j.push(new CSG.Polygon([e,b(0,n,-1),b(0,o,-1)]));j.push(new CSG.Polygon([b(0,o,0),b(0,n,0),b(1,n,0)]));j.push(new CSG.Polygon([b(0,o,0),b(1,n,0),b(1,o,0)]));j.push(new CSG.Polygon([f,b(1,o,1),b(1,n,1)]))}return CSG.fromPolygons(j)};CSG.Vector=function(a,b,c){if(arguments.length==3){this.x=a;this.y=b;this.z=c}else if("x"in a){this.x=a.x;this.y=a.y;this.z=a.z}else{this.x=a[0];this.y=a[1];this.z=a[2]}};
CSG.Vector.prototype={clone:function(){return new CSG.Vector(this.x,this.y,this.z)},negated:function(){return new CSG.Vector(-this.x,-this.y,-this.z)},plus:function(a){return new CSG.Vector(this.x+a.x,this.y+a.y,this.z+a.z)},minus:function(a){return new CSG.Vector(this.x-a.x,this.y-a.y,this.z-a.z)},times:function(a){return new CSG.Vector(this.x*a,this.y*a,this.z*a)},dividedBy:function(a){return new CSG.Vector(this.x/a,this.y/a,this.z/a)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lerp:function(a,
b){return this.plus(a.minus(this).times(b))},length:function(){return Math.sqrt(this.dot(this))},unit:function(){return this.dividedBy(this.length())},cross:function(a){return new CSG.Vector(this.y*a.z-this.z*a.y,this.z*a.x-this.x*a.z,this.x*a.y-this.y*a.x)}};CSG.Vertex=function(a,b){this.pos=new CSG.Vector(a);this.normal=new CSG.Vector(b)};
CSG.Vertex.prototype={clone:function(){return new CSG.Vertex(this.pos.clone(),this.normal.clone())},flip:function(){this.normal=this.normal.negated()},interpolate:function(a,b){return new CSG.Vertex(this.pos.lerp(a.pos,b),this.normal.lerp(a.normal,b))}};CSG.Plane=function(a,b){this.normal=a;this.w=b};CSG.Plane.EPSILON=1.0E-5;CSG.Plane.fromPoints=function(a,b,c){b=b.minus(a).cross(c.minus(a)).unit();return new CSG.Plane(b,b.dot(a))};
CSG.Plane.prototype={clone:function(){return new CSG.Plane(this.normal.clone(),this.w)},flip:function(){this.normal=this.normal.negated();this.w=-this.w},splitPolygon:function(a,b,c,f,g){for(var i=0,h=[],e=0;e<a.vertices.length;e++){var d=this.normal.dot(a.vertices[e].pos)-this.w;d=d<-CSG.Plane.EPSILON?2:d>CSG.Plane.EPSILON?1:0;i|=d;h.push(d)}switch(i){case 0:(this.normal.dot(a.plane.normal)>0?b:c).push(a);break;case 1:f.push(a);break;case 2:g.push(a);break;case 3:b=[];c=[];for(e=0;e<a.vertices.length;e++){var k=
(e+1)%a.vertices.length;d=h[e];var j=h[k];i=a.vertices[e];k=a.vertices[k];d!=2&&b.push(i);if(d!=1)c.push(d!=2?i.clone():i);if((d|j)==3){d=(this.w-this.normal.dot(i.pos))/this.normal.dot(k.pos.minus(i.pos));d=i.interpolate(k,d);b.push(d);c.push(d.clone())}}b.length>=3&&f.push(new CSG.Polygon(b,a.shared));c.length>=3&&g.push(new CSG.Polygon(c,a.shared))}}};CSG.Polygon=function(a,b){this.vertices=a;this.shared=b;this.plane=CSG.Plane.fromPoints(a[0].pos,a[1].pos,a[2].pos)};
CSG.Polygon.prototype={clone:function(){var a=this.vertices.map(function(b){return b.clone()});return new CSG.Polygon(a,this.shared)},flip:function(){this.vertices.reverse().map(function(a){a.flip()});this.plane.flip()}};CSG.Node=function(){this.back=this.front=this.plane=null;this.polygons=[]};
CSG.Node.prototype={clone:function(){var a=new CSG.Node;a.plane=this.plane&&this.plane.clone();a.front=this.front&&this.front.clone();a.back=this.back&&this.back.clone();a.polygons=this.polygons.map(function(b){return b.clone()});return a},invert:function(){for(var a=0;a<this.polygons.length;a++)this.polygons[a].flip();this.plane.flip();this.front&&this.front.invert();this.back&&this.back.invert();a=this.front;this.front=this.back;this.back=a},clipPolygons:function(a){for(var b=[],c=[],f=0;f<a.length;f++)this.plane.splitPolygon(a[f],
b,c,b,c);if(this.front)b=this.front.clipPolygons(b);c=this.back?this.back.clipPolygons(c):[];return b.concat(c)},clipTo:function(a){this.polygons=a.clipPolygons(this.polygons);this.front&&this.front.clipTo(a);this.back&&this.back.clipTo(a)},allPolygons:function(){var a=this.polygons.slice();if(this.front)a=a.concat(this.front.allPolygons());if(this.back)a=a.concat(this.back.allPolygons());return a},build:function(a){if(a.length){if(!this.plane)this.plane=a[0].plane.clone();for(var b=[],c=[],f=0;f<
a.length;f++)this.plane.splitPolygon(a[f],this.polygons,this.polygons,b,c);if(b.length){if(!this.front)this.front=new CSG.Node;this.front.build(b)}if(c.length){if(!this.back)this.back=new CSG.Node;this.back.build(c)}}}};
